{
  "env": {
    "browser": true,
    "node": true,
    "jest": true,
    "jasmine": true,
    "es6": true
  },
  "plugins": ["promise", "@typescript-eslint", "jest"],
  "extends": [
    "eslint:recommended",
    "plugin:promise/recommended",
    "plugin:import/errors",
    "plugin:import/typescript",
    "plugin:@typescript-eslint/recommended",
    "plugin:jest/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "rules": {
    "sort-keys": [
      // TODO: Reenable this with "warn" after we auto-fix whole codebase
      "off",
      "asc",
      { "caseSensitive": true, "natural": false, "minKeys": 2 }
    ],
    "import/first": 0,
    "import/named": 0,
    "import/default": 0,
    "no-useless-escape": 0,
    "no-empty-pattern": 0,
    "promise/no-nesting": 0,
    "no-unused-vars": "off",
    "@typescript-eslint/no-extra-semi": 0,
    "@typescript-eslint/member-delimiter-style": 0,
    "@typescript-eslint/no-explicit-any": 0,
    "@typescript-eslint/explicit-function-return-type": 0,
    "@typescript-eslint/no-non-null-assertion": 0,
    "@typescript-eslint/no-var-requires": 0,
    "@typescript-eslint/camelcase": 0,
    "@typescript-eslint/ban-ts-ignore": 0,
    "@typescript-eslint/ban-ts-comment": 0,
    "@typescript-eslint/no-unused-vars": [
      "error",
      { "argsIgnorePattern": "^_", "ignoreRestSiblings": true }
    ],
    "@typescript-eslint/no-use-before-define": 0,
    "@typescript-eslint/explicit-module-boundary-types": 0,
    "prefer-const": ["error", { "ignoreReadBeforeAssign": true }],
    "jest/expect-expect": [
      "warn",
      {
        "assertFunctionNames": [
          "expect",
          "expectPromiseRejectionToMatch",
          "assertStatusSupported",
          "assertInvalidStatusFails"
        ]
      }
    ]
  },
  "globals": {
    "expect": false,
    "schema": false,
    "sinon": false,
    "expectPromiseRejectionToMatch": false
  },
  "settings": {
    "import/resolver": {
      "typescript": {
        "directory": "./tsconfig.json"
      }
    },
    "import/parsers": {
      "@typescript-eslint/parser": [".ts", ".tsx"]
    }
  },
  "parserOptions": {
    "sourceType": "module"
  }
}
