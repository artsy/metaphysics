"""
Autogenerated input type of AddInitialOfferToOrder
"""
input AddInitialOfferToOrderInput {
  amountCents: Int!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  note: String
  orderId: ID!
}

"""
Autogenerated return type of AddInitialOfferToOrder
"""
type AddInitialOfferToOrderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A union of success/failure
  """
  orderOrError: OrderOrFailureUnion!
}

"""
An generic error type for mutations
"""
type ApplicationError {
  """
  Code of this error
  """
  code: String!

  """
  What caused the error
  """
  data: String

  """
  Type of this error
  """
  type: String!
}

"""
Autogenerated input type of ApproveOrder
"""
input ApproveOrderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of ApproveOrder
"""
type ApproveOrderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A union of success/failure
  """
  orderOrError: OrderOrFailureUnion!
}

type BuyOrder implements Order {
  buyer: OrderPartyUnion!
  buyerPhoneNumber: String
  buyerTotalCents: Int
  code: String!
  commissionFeeCents: Int
  commissionRate: Float
  createdAt: DateTime!
  creditCardId: String
  currencyCode: String!
  displayCommissionRate: String
  id: ID!
  internalID: ID!

  """
  Item total in cents, for Offer Orders this field reflects current offer
  """
  itemsTotalCents: Int
  lastApprovedAt: DateTime
  lastSubmittedAt: DateTime
  lastTransactionFailed: Boolean
  lineItems(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): LineItemConnection
  mode: OrderModeEnum
  requestedFulfillment: RequestedFulfillmentUnion
  seller: OrderPartyUnion!
  sellerTotalCents: Int
  shippingTotalCents: Int
  state: OrderStateEnum!
  stateExpiresAt: DateTime
  stateReason: String
  stateUpdatedAt: DateTime
  taxTotalCents: Int
  totalListPriceCents: Int!
  transactionFeeCents: Int
  updatedAt: DateTime!
}

"""
Autogenerated input type of BuyerAcceptOffer
"""
input BuyerAcceptOfferInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  offerId: ID!
}

"""
Autogenerated return type of BuyerAcceptOffer
"""
type BuyerAcceptOfferPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A union of success/failure
  """
  orderOrError: OrderOrFailureUnion!
}

"""
Autogenerated input type of BuyerCounterOffer
"""
input BuyerCounterOfferInput {
  amountCents: Int!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  note: String
  offerId: ID!
}

"""
Autogenerated return type of BuyerCounterOffer
"""
type BuyerCounterOfferPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A union of success/failure
  """
  orderOrError: OrderOrFailureUnion!
}

"""
Autogenerated input type of BuyerRejectOffer
"""
input BuyerRejectOfferInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  offerId: ID!
  rejectReason: CancelReasonTypeEnum
}

"""
Autogenerated return type of BuyerRejectOffer
"""
type BuyerRejectOfferPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A union of success/failure
  """
  orderOrError: OrderOrFailureUnion!
}

enum CancelReasonTypeEnum {
  """
  cancelation reason is: buyer_lapsed
  """
  BUYER_LAPSED

  """
  cancelation reason is: buyer_rejected
  """
  BUYER_REJECTED

  """
  cancelation reason is: seller_lapsed
  """
  SELLER_LAPSED

  """
  cancelation reason is: seller_rejected
  """
  SELLER_REJECTED

  """
  cancelation reason is: seller_rejected_artwork_unavailable
  """
  SELLER_REJECTED_ARTWORK_UNAVAILABLE

  """
  cancelation reason is: seller_rejected_offer_too_low
  """
  SELLER_REJECTED_OFFER_TOO_LOW

  """
  cancelation reason is: seller_rejected_other
  """
  SELLER_REJECTED_OTHER

  """
  cancelation reason is: seller_rejected_shipping_unavailable
  """
  SELLER_REJECTED_SHIPPING_UNAVAILABLE
}

"""
Autogenerated input type of ConfirmFulfillment
"""
input ConfirmFulfillmentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of ConfirmFulfillment
"""
type ConfirmFulfillmentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A union of success/failure
  """
  orderOrError: OrderOrFailureUnion!
}

"""
Autogenerated input type of ConfirmPickup
"""
input ConfirmPickupInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of ConfirmPickup
"""
type ConfirmPickupPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A union of success/failure
  """
  orderOrError: OrderOrFailureUnion!
}

"""
Autogenerated input type of CreateOfferOrderWithArtwork
"""
input CreateOfferOrderWithArtworkInput {
  """
  Artwork Id
  """
  artworkId: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  EditionSet Id
  """
  editionSetId: String

  """
  When set to false, we will create a new order. Otherwise if current user has
  pending/submitted orders on same artwork/edition with same quantity, we will return that
  """
  findActiveOrCreate: Boolean = true

  """
  Number of items in the line item, default is 1
  """
  quantity: Int
}

"""
Autogenerated return type of CreateOfferOrderWithArtwork
"""
type CreateOfferOrderWithArtworkPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A union of success/failure. If find_active_or_create is not false, it will
  return existing pending/submitted order for current user if exists, otherwise
  it will return newly created order
  """
  orderOrError: OrderOrFailureUnion!
}

"""
Autogenerated input type of CreateOrderWithArtwork
"""
input CreateOrderWithArtworkInput {
  """
  Artwork Id
  """
  artworkId: String!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  EditionSet Id
  """
  editionSetId: String

  """
  Number of items in the line item
  """
  quantity: Int
}

"""
Autogenerated return type of CreateOrderWithArtwork
"""
type CreateOrderWithArtworkPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A union of success/failure
  """
  orderOrError: OrderOrFailureUnion!
}

"""
Date in YYYY-MM-DD format
"""
scalar Date

"""
An ISO 8601 datetime
"""
scalar DateTime

"""
Autogenerated input type of FixFailedPayment
"""
input FixFailedPaymentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  creditCardId: String!
  offerId: ID!
}

"""
Autogenerated return type of FixFailedPayment
"""
type FixFailedPaymentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A union of success/failure
  """
  orderOrError: OrderOrFailureUnion!
}

"""
Autogenerated input type of FulfillAtOnce
"""
input FulfillAtOnceInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  fulfillment: FulfillmentAttributes!
  id: ID!
}

"""
Autogenerated return type of FulfillAtOnce
"""
type FulfillAtOncePayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A union of success/failure
  """
  orderOrError: OrderOrFailureUnion!
}

"""
A Fulfillment for an order
"""
type Fulfillment {
  courier: String!
  createdAt: DateTime!
  estimatedDelivery: Date
  id: ID!
  internalID: ID!
  notes: String
  trackingId: String
  updatedAt: DateTime!
}

"""
Attributes of a Fulfillment
"""
input FulfillmentAttributes {
  courier: String!
  estimatedDelivery: Date
  notes: String
  trackingId: String
}

"""
The connection type for Fulfillment.
"""
type FulfillmentConnection {
  """
  A list of edges.
  """
  edges: [FulfillmentEdge]

  """
  A list of nodes.
  """
  nodes: [Fulfillment]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type FulfillmentEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Fulfillment
}

"""
A Line Item
"""
type LineItem {
  artworkId: String!
  artworkVersionId: String!
  commissionFeeCents: Int
  createdAt: DateTime!
  editionSetId: String
  fulfillments(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): FulfillmentConnection
  id: ID!
  internalID: ID!
  listPriceCents: Int!
  order: Order!
  priceCents: Int! @deprecated(reason: "switch to use listPriceCents")
  quantity: Int!
  shippingTotalCents: Int
  updatedAt: DateTime!
}

"""
The connection type for LineItem.
"""
type LineItemConnection {
  """
  A list of edges.
  """
  edges: [LineItemEdge]

  """
  A list of nodes.
  """
  nodes: [LineItem]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type LineItemEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: LineItem
}

type Mutation {
  addInitialOfferToOrder(input: AddInitialOfferToOrderInput!): AddInitialOfferToOrderPayload
  approveOrder(input: ApproveOrderInput!): ApproveOrderPayload
  buyerAcceptOffer(input: BuyerAcceptOfferInput!): BuyerAcceptOfferPayload
  buyerCounterOffer(input: BuyerCounterOfferInput!): BuyerCounterOfferPayload
  buyerRejectOffer(input: BuyerRejectOfferInput!): BuyerRejectOfferPayload
  confirmFulfillment(input: ConfirmFulfillmentInput!): ConfirmFulfillmentPayload
  confirmPickup(input: ConfirmPickupInput!): ConfirmPickupPayload
  createOfferOrderWithArtwork(input: CreateOfferOrderWithArtworkInput!): CreateOfferOrderWithArtworkPayload
  createOrderWithArtwork(input: CreateOrderWithArtworkInput!): CreateOrderWithArtworkPayload
  fixFailedPayment(input: FixFailedPaymentInput!): FixFailedPaymentPayload

  """
  Fulfill an order with one Fulfillment, it sets this fulfillment to each line item in order
  """
  fulfillAtOnce(input: FulfillAtOnceInput!): FulfillAtOncePayload
  rejectOrder(input: RejectOrderInput!): RejectOrderPayload
  sellerAcceptOffer(input: SellerAcceptOfferInput!): SellerAcceptOfferPayload
  sellerCounterOffer(input: SellerCounterOfferInput!): SellerCounterOfferPayload
  sellerRejectOffer(input: SellerRejectOfferInput!): SellerRejectOfferPayload
  setPayment(input: SetPaymentInput!): SetPaymentPayload
  setShipping(input: SetShippingInput!): SetShippingPayload
  submitOrder(input: SubmitOrderInput!): SubmitOrderPayload
  submitOrderWithOffer(input: SubmitOrderWithOfferInput!): SubmitOrderWithOfferPayload
  submitPendingOffer(input: SubmitPendingOfferInput!): SubmitPendingOfferPayload
}

"""
An Offer
"""
type Offer {
  amountCents: Int!
  buyerTotalCents: Int
  createdAt: DateTime!
  creatorId: String!
  currencyCode: String!
  from: OrderPartyUnion!
  fromParticipant: OrderParticipantEnum
  id: ID!
  internalID: ID!
  note: String
  order: Order!
  respondsTo: Offer
  shippingTotalCents: Int
  submittedAt: DateTime
  taxTotalCents: Int
}

"""
The connection type for Offer.
"""
type OfferConnection {
  """
  A list of edges.
  """
  edges: [OfferEdge]

  """
  A list of nodes.
  """
  nodes: [Offer]

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
}

"""
An edge in a connection.
"""
type OfferEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Offer
}

type OfferOrder implements Order {
  awaitingResponseFrom: OrderParticipantEnum
  buyer: OrderPartyUnion!
  buyerPhoneNumber: String
  buyerTotalCents: Int
  code: String!
  commissionFeeCents: Int
  commissionRate: Float
  createdAt: DateTime!
  creditCardId: String
  currencyCode: String!
  displayCommissionRate: String
  id: ID!
  internalID: ID!

  """
  Item total in cents, for Offer Orders this field reflects current offer
  """
  itemsTotalCents: Int
  lastApprovedAt: DateTime

  """
  Last submitted offer
  """
  lastOffer: Offer
  lastSubmittedAt: DateTime
  lastTransactionFailed: Boolean
  lineItems(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): LineItemConnection
  mode: OrderModeEnum
  myLastOffer: Offer
  offers(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int
    fromId: String
    fromType: String

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): OfferConnection
  requestedFulfillment: RequestedFulfillmentUnion
  seller: OrderPartyUnion!
  sellerTotalCents: Int
  shippingTotalCents: Int
  state: OrderStateEnum!
  stateExpiresAt: DateTime
  stateReason: String
  stateUpdatedAt: DateTime
  taxTotalCents: Int
  totalListPriceCents: Int!
  transactionFeeCents: Int
  updatedAt: DateTime!
}

"""
Order
"""
interface Order {
  buyer: OrderPartyUnion!
  buyerPhoneNumber: String
  buyerTotalCents: Int
  code: String!
  commissionFeeCents: Int
  commissionRate: Float
  createdAt: DateTime!
  creditCardId: String
  currencyCode: String!
  displayCommissionRate: String
  id: ID!
  internalID: ID!

  """
  Item total in cents, for Offer Orders this field reflects current offer
  """
  itemsTotalCents: Int
  lastApprovedAt: DateTime
  lastSubmittedAt: DateTime
  lastTransactionFailed: Boolean
  lineItems(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
  ): LineItemConnection
  mode: OrderModeEnum
  requestedFulfillment: RequestedFulfillmentUnion
  seller: OrderPartyUnion!
  sellerTotalCents: Int
  shippingTotalCents: Int
  state: OrderStateEnum!
  stateExpiresAt: DateTime
  stateReason: String
  stateUpdatedAt: DateTime
  taxTotalCents: Int
  totalListPriceCents: Int!
  transactionFeeCents: Int
  updatedAt: DateTime!
}

"""
Order Action data
"""
type OrderActionData {
  clientSecret: String!
}

"""
Fields to sort by
"""
enum OrderConnectionSortEnum {
  """
  Sort by the timestamp the state of the order expires at in ascending order
  """
  STATE_EXPIRES_AT_ASC

  """
  Sort by the timestamp the state of the order expires at in descending order
  """
  STATE_EXPIRES_AT_DESC

  """
  Sort by the timestamp the state of order was last updated in ascending order
  """
  STATE_UPDATED_AT_ASC

  """
  Sort by the timestamp the state of order was last updated in descending order
  """
  STATE_UPDATED_AT_DESC

  """
  Sort by the timestamp the order was last updated in ascending order
  """
  UPDATED_AT_ASC

  """
  Sort by the timestamp the order was last updated in descending order
  """
  UPDATED_AT_DESC
}

"""
The connection type for Order.
"""
type OrderConnectionWithTotalCount {
  """
  A list of edges.
  """
  edges: [OrderEdge]

  """
  A list of nodes.
  """
  nodes: [Order]
  pageCursors: PageCursors

  """
  Information to aid in pagination.
  """
  pageInfo: PageInfo!
  totalCount: Int
  totalPages: Int
}

"""
An edge in a connection.
"""
type OrderEdge {
  """
  A cursor for use in pagination.
  """
  cursor: String!

  """
  The item at the end of the edge.
  """
  node: Order
}

enum OrderFulfillmentTypeEnum {
  """
  fulfillment type is: pickup
  """
  PICKUP

  """
  fulfillment type is: ship
  """
  SHIP
}

enum OrderModeEnum {
  """
  Buy Order
  """
  BUY

  """
  Offer Order
  """
  OFFER
}

"""
Represents either a resolved Order or a potential failure
"""
union OrderOrFailureUnion = OrderRequiresAction | OrderWithMutationFailure | OrderWithMutationSuccess

enum OrderParticipantEnum {
  """
  Participant on the buyer side
  """
  BUYER

  """
  Participant on the seller side
  """
  SELLER
}

"""
Represents either a partner or a user
"""
union OrderPartyUnion = Partner | User

"""
Data reflecting actions required
"""
type OrderRequiresAction {
  """
  Data related to action needed
  """
  actionData: OrderActionData!
}

enum OrderStateEnum {
  """
  order is abandoned by buyer and never submitted
  """
  ABANDONED

  """
  order is approved by seller
  """
  APPROVED

  """
  order is canceled
  """
  CANCELED

  """
  order is fulfilled by seller
  """
  FULFILLED

  """
  order is still pending submission by buyer
  """
  PENDING

  """
  order is refunded after being approved or fulfilled
  """
  REFUNDED

  """
  order is submitted by buyer
  """
  SUBMITTED
}

"""
An error response for changes to an order
"""
type OrderWithMutationFailure {
  error: ApplicationError!
}

"""
A successfully returned order type
"""
type OrderWithMutationSuccess {
  order: Order!
}

type PageCursor {
  """
  first cursor on the page
  """
  cursor: String!

  """
  is this the current page?
  """
  isCurrent: Boolean!

  """
  page number out of totalPages
  """
  page: Int!
}

type PageCursors {
  around: [PageCursor!]!

  """
  optional, may be included in field around
  """
  first: PageCursor

  """
  optional, may be included in field around
  """
  last: PageCursor
  previous: PageCursor
}

"""
Information about pagination in a connection.
"""
type PageInfo {
  """
  When paginating forwards, the cursor to continue.
  """
  endCursor: String

  """
  When paginating forwards, are there more items?
  """
  hasNextPage: Boolean!

  """
  When paginating backwards, are there more items?
  """
  hasPreviousPage: Boolean!

  """
  When paginating backwards, the cursor to continue.
  """
  startCursor: String
}

type Partner {
  id: String!
  type: String!
}

type Pickup {
  fulfillmentType: String!
}

type Query {
  """
  Find list of competing orders
  """
  competingOrders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    orderId: ID!
  ): OrderConnectionWithTotalCount
  lineItems(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String
    artworkId: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    editionSetId: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    orderStates: [OrderStateEnum!]
  ): LineItemConnection

  """
  Find an order by ID
  """
  order(code: String, id: ID): Order

  """
  Find list of orders
  """
  orders(
    """
    Returns the elements in the list that come after the specified cursor.
    """
    after: String

    """
    Returns the elements in the list that come before the specified cursor.
    """
    before: String
    buyerId: String
    buyerType: String

    """
    Returns the first _n_ elements from the list.
    """
    first: Int

    """
    Returns the last _n_ elements from the list.
    """
    last: Int
    mode: OrderModeEnum
    sellerId: String
    sellerType: String
    sort: OrderConnectionSortEnum
    state: OrderStateEnum
  ): OrderConnectionWithTotalCount
}

"""
Autogenerated input type of RejectOrder
"""
input RejectOrderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of RejectOrder
"""
type RejectOrderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A union of success/failure
  """
  orderOrError: OrderOrFailureUnion!
}

"""
Represents either a shipping information or pickup
"""
union RequestedFulfillmentUnion = Pickup | Ship

"""
Autogenerated input type of SellerAcceptOffer
"""
input SellerAcceptOfferInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  offerId: ID!
}

"""
Autogenerated return type of SellerAcceptOffer
"""
type SellerAcceptOfferPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A union of success/failure
  """
  orderOrError: OrderOrFailureUnion!
}

"""
Autogenerated input type of SellerCounterOffer
"""
input SellerCounterOfferInput {
  amountCents: Int!

  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  note: String
  offerId: ID!
}

"""
Autogenerated return type of SellerCounterOffer
"""
type SellerCounterOfferPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A union of success/failure
  """
  orderOrError: OrderOrFailureUnion!
}

"""
Autogenerated input type of SellerRejectOffer
"""
input SellerRejectOfferInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  offerId: ID!
  rejectReason: CancelReasonTypeEnum
}

"""
Autogenerated return type of SellerRejectOffer
"""
type SellerRejectOfferPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A union of success/failure
  """
  orderOrError: OrderOrFailureUnion!
}

"""
Autogenerated input type of SetPayment
"""
input SetPaymentInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  creditCardId: String!
  id: ID!
}

"""
Autogenerated return type of SetPayment
"""
type SetPaymentPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A union of success/failure
  """
  orderOrError: OrderOrFailureUnion!
}

"""
Autogenerated input type of SetShipping
"""
input SetShippingInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  fulfillmentType: OrderFulfillmentTypeEnum!
  id: ID!
  shipping: ShippingAttributes
}

"""
Autogenerated return type of SetShipping
"""
type SetShippingPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A union of success/failure
  """
  orderOrError: OrderOrFailureUnion!
}

type Ship {
  addressLine1: String
  addressLine2: String
  city: String
  country: String
  name: String
  phoneNumber: String
  postalCode: String
  region: String
}

"""
Shipping information
"""
input ShippingAttributes {
  addressLine1: String
  addressLine2: String
  city: String
  country: String
  name: String
  phoneNumber: String!
  postalCode: String
  region: String
}

"""
Autogenerated input type of SubmitOrder
"""
input SubmitOrderInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  id: ID!
}

"""
Autogenerated return type of SubmitOrder
"""
type SubmitOrderPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A union of success/failure
  """
  orderOrError: OrderOrFailureUnion!
}

"""
Autogenerated input type of SubmitOrderWithOffer
"""
input SubmitOrderWithOfferInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  offerId: ID!
}

"""
Autogenerated return type of SubmitOrderWithOffer
"""
type SubmitOrderWithOfferPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A union of success/failure
  """
  orderOrError: OrderOrFailureUnion!
}

"""
Autogenerated input type of SubmitPendingOffer
"""
input SubmitPendingOfferInput {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String
  offerId: ID!
}

"""
Autogenerated return type of SubmitPendingOffer
"""
type SubmitPendingOfferPayload {
  """
  A unique identifier for the client performing the mutation.
  """
  clientMutationId: String

  """
  A union of success/failure
  """
  orderOrError: OrderOrFailureUnion!
}

type User {
  id: String!
}