import { GraphQLString } from "graphql"
import { mutationWithClientMutationId } from "graphql-relay"
import { SaleType } from "schema/v2/sale/index"
import { ResolverContext } from "types/graphql"

export const endSaleMutation = mutationWithClientMutationId({
  name: "EndSale",
  description: "Mark sale as ended.",
  inputFields: {
    saleID: {
      type: GraphQLString,
    },
  } /*
  FIXME: Generated by the snake_case to camelCase codemod.
         Either use this to fix inputs and/or remove this comment.
  {
    const {
      saleID
    } = newFields;
    const oldFields = {
      saleID: sale_id
    };
  }
  */,
  outputFields: {
    sale: {
      type: SaleType,
      resolve: (sale) => sale,
    },
  },
  mutateAndGetPayload: ({ saleID }, { endSaleLoader }) => {
    if (!endSaleLoader) {
      throw new Error("You need to be signed in to perform this action")
    }
    return endSaleLoader(saleID)
  },
})
