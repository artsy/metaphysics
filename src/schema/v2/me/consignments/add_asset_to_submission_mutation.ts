/**
 * FIXME: Deprecated. Remove once Convection stitching settles for a bit
 */

import { GraphQLString, GraphQLNonNull } from "graphql"
import { mutationWithClientMutationId } from "graphql-relay"
import { AssetType } from "./asset"
import { ResolverContext } from "types/graphql"

export default mutationWithClientMutationId<any, any, ResolverContext>({
  name: "AddAssetToConsignmentSubmission",
  description: "Attach an gemini asset to a consignment submission",
  inputFields: {
    assetType: {
      type: new GraphQLNonNull(GraphQLString),
      description: "The type of the asset",
    },
    geminiToken: {
      type: new GraphQLNonNull(GraphQLString),
      description: "The token provided by Gemini for your asset",
    },
    submissionID: {
      type: new GraphQLNonNull(GraphQLString),
      description: "The id of the submission you want to attach an asset to",
    },
  } /*
  FIXME: Generated by the snake_case to camelCase codemod.
         Either use this to fix inputs and/or remove this comment.
  {
    const {
      assetType,
      geminiToken,
      submissionID
    } = newFields;
    const oldFields = {
      assetType: asset_type,
      geminiToken: gemini_token,
      submissionID: submission_id
    };
  }
  */,
  outputFields: {
    asset: {
      type: AssetType,
      resolve: asset => asset,
    },
  },
  mutateAndGetPayload: (
    { assetType, geminiToken, submissionID },
    { assetCreateLoader }
  ) => {
    const assets: any = {
      asset_type: assetType,
      gemini_token: geminiToken,
      submission_id: submissionID,
    }
    if (!assetCreateLoader) return null
    return assetCreateLoader(assets)
  },
})
