// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`creates an SDL 1`] = `
"# Object representing a collection page
type MarketingCollection {
  id: ID!

  # slug version of title, used for pretty URLs (e.g. \`kaws-prints\` for Kaws Prints
  slug: String!

  # Name of the collection
  title: String!

  # Description of the collection which can include links to other collections
  description: String

  # Background image for the header of the collection page
  headerImage: String

  # Set of keywords used for SEO purposes
  keywords: String!

  # Image credit for the header image
  credit: String

  # Category of the collection
  category: String!

  # Structured object used to build filtered artworks query
  query: MarketingCollectionQuery!
  createdAt: MarketingDateTime!
  updatedAt: MarketingDateTime!
}

type MarketingCollectionCategory {
  name: String!
  collections: [MarketingCollection!]!
}

type MarketingCollectionQuery {
  id: ID
  acquireable: Boolean
  aggregations: [String!]
  artist_ids: [String!]
  artist_id: String
  at_auction: Boolean
  color: String
  dimension_range: String
  extra_aggregation_gene_ids: [String!]
  include_artworks_by_followed_artists: Boolean
  include_medium_filter_in_aggregation: Boolean
  inquireable_only: Boolean
  for_sale: Boolean
  gene_id: String
  gene_ids: [String!]
  height: String
  width: String
  medium: String
  period: String
  periods: [String!]
  major_periods: [String!]
  partner_id: ID
  partner_cities: [String!]
  price_range: String
  page: Int
  sale_id: ID
  size: Int
  sort: String
  tag_id: String
  keyword: String
}

scalar MarketingDateTime

type Query {
  marketingCollections(artistID: String): [MarketingCollection!]!
  marketingCategories: [MarketingCollectionCategory!]!
  marketingCollection(slug: String!): MarketingCollection
}
"
`;
