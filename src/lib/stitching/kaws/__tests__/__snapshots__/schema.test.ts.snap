// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`creates an SDL 1`] = `
"# Object representing a collection page
type MarketingCollection {
  id: ID!
  internalID: ID!

  # slug version of title, used for pretty URLs (e.g. \`kaws-prints\` for Kaws Prints
  slug: String!

  # Name of the collection
  title: String!

  # Description of the collection which can include links to other collections
  description: String

  # Markdown alternate of description field contents.
  descriptionMarkdown: String

  # Background image for the header of the collection page
  headerImage: String

  # URL for Thumbnail image to be used when this collection is displayed.
  thumbnail: String

  # Set of keywords used for SEO purposes
  keywords: String!

  # Image credit for the header image
  credit: String

  # Category of the collection
  category: String!

  # Structured object used to build filtered artworks query
  query: MarketingCollectionQuery!
  createdAt: MarketingDateTime!
  updatedAt: MarketingDateTime!

  # Suggested average price for included works
  price_guidance: Float @deprecated(reason: \\"Prefer priceGuidance\\")

  # Suggested average price for included works
  priceGuidance: Float

  # Collection can be surfaced on editorial pages
  show_on_editorial: Boolean! @deprecated(reason: \\"Prefer showOnEditorial\\")

  # Collection can be surfaced on editorial pages
  showOnEditorial: Boolean!

  # Collection has prioritized connection to artist
  is_featured_artist_content: Boolean! @deprecated(reason: \\"Prefer isFeaturedArtistContent\\")

  # Collection has prioritized connection to artist
  isFeaturedArtistContent: Boolean!

  # CollectionGroups of this collection
  linkedCollections: [MarketingCollectionGroup!]!

  # IDs of artists that should be excluded from Featured Artists for this collection
  featuredArtistExclusionIds: [String!]
  relatedCollections: [MarketingCollection!]!
}

type MarketingCollectionCategory {
  name: String!
  collections: [MarketingCollection!]!
}

type MarketingCollectionGroup {
  internalID: ID
  groupType: MarketingGroupTypes!
  name: String!
  members: [MarketingCollection!]!
}

type MarketingCollectionQuery {
  id: ID
  internalID: ID
  acquireable: Boolean
  aggregations: [String!]
  artist_ids: [String!] @deprecated(reason: \\"Prefer artistIDs\\")
  artistIDs: [String!]
  artist_id: String @deprecated(reason: \\"Prefer artistID\\")
  artistID: String
  at_auction: Boolean @deprecated(reason: \\"Prefer atAuction\\")
  atAuction: Boolean
  color: String
  dimension_range: String @deprecated(reason: \\"Prefer dimensionRange\\")
  dimensionRange: String
  extra_aggregation_gene_ids: [String!] @deprecated(reason: \\"prefer extraAggregationGeneIDs\\")
  extraAggregationGeneIDs: [String!]
  include_artworks_by_followed_artists: Boolean @deprecated(reason: \\"Prefer includeArtworksByFollowedArtists\\")
  includeArtworksByFollowedArtists: Boolean
  include_medium_filter_in_aggregation: Boolean @deprecated(reason: \\"Prefer includeMediumFilterInAggregation\\")
  includeMediumFilterInAggregation: Boolean
  inquireable_only: Boolean @deprecated(reason: \\"Prefer inquireableOnly\\")
  inquireableOnly: Boolean
  for_sale: Boolean @deprecated(reason: \\"Prefer forSale\\")
  forSale: Boolean
  gene_id: String @deprecated(reason: \\"Prefer geneID\\")
  geneID: String
  gene_ids: [String!] @deprecated(reason: \\"Prefer geneIDs\\")
  geneIDs: [String!]
  height: String
  width: String
  medium: String
  period: String
  periods: [String!]
  major_periods: [String!] @deprecated(reason: \\"Prefer majorPeriods\\")
  majorPeriods: [String!]
  partner_id: ID @deprecated(reason: \\"Prefer partnerID\\")
  partnerID: ID
  partner_cities: [String!] @deprecated(reason: \\"Prefer partnerCities\\")
  partnerCities: [String!]
  price_range: String @deprecated(reason: \\"Prefer priceRange\\")
  priceRange: String
  page: Int
  sale_id: ID @deprecated(reason: \\"Prefer saleID\\")
  saleID: ID
  size: Int
  sort: String
  tag_id: String @deprecated(reason: \\"Prefer tagID\\")
  tagID: String
  keyword: String
}

scalar MarketingDateTime

# Available types of CollectionGroup
enum MarketingGroupTypes {
  ArtistSeries
  FeaturedCollections
  OtherCollections
}

type Query {
  marketingCollections(category: String, randomizationSeed: String, size: Int, isFeaturedArtistContent: Boolean, showOnEditorial: Boolean, artistID: String): [MarketingCollection!]!
  marketingCategories: [MarketingCollectionCategory!]!
  marketingCollection(slug: String!): MarketingCollection
  marketingHubCollections: [MarketingCollection!]!
}
"
`;
