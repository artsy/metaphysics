// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`creates an SDL 1`] = `
"type DoNotUseThisPartner {
  displayName: String
  display_name: String @deprecated(reason: \\"Use displayName\\")
  givenName: String
  given_name: String @deprecated(reason: \\"Use givenName\\")
  id: ID!
  relativeSize: Int
  relative_size: Int @deprecated(reason: \\"Use relativeSize\\")
  slug: String
  subscriptionState: String
  subscription_state: String @deprecated(reason: \\"Use subscriptionState\\")
}

# A user-readable error
type Error {
  # Error code
  code: String!

  # Extra data about error.
  data: JSON

  # A description of the error
  message: String!

  # Which input value this error came from
  path: [String!]
}

# A user-readable list of errors
type Errors {
  # List of Errors.
  errors: [Error!]!
}

# Autogenerated input type of HoldInventory
input HoldInventoryInput {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  expiresInSeconds: Int
  items: [InventoryHoldItemAttributes!]!

  # Globally unique ID for the requester of this hold. Ex. Exchange Order ID.
  referenceId: String!
}

# Autogenerated return type of HoldInventory
type HoldInventoryPayload {
  # A unique identifier for the client performing the mutation.
  clientMutationId: String
  holdOrError: InventoryHoldOrErrorUnion!
}

type InventoryHold {
  id: ID!
  items(
    # Returns the elements in the list that come after the specified cursor.
    after: String

    # Returns the elements in the list that come before the specified cursor.
    before: String

    # Returns the first _n_ elements from the list.
    first: Int

    # Returns the last _n_ elements from the list.
    last: Int
  ): InventoryHoldItemConnection
  referenceId: String!
}

type InventoryHoldItem {
  artworkId: String!
  editionSetId: String
  id: ID!
  quantity: Int!
}

# Attributes for creating or updating an inventory hold item
input InventoryHoldItemAttributes {
  # ID of the artwork
  artworkId: String!

  # ID of edition set
  editionSetId: String
  quantity: Int!
}

# The connection type for InventoryHoldItem.
type InventoryHoldItemConnection {
  # A list of edges.
  edges: [InventoryHoldItemEdge]

  # A list of nodes.
  nodes: [InventoryHoldItem]

  # Information to aid in pagination.
  pageInfo: PageInfo!
}

# An edge in a connection.
type InventoryHoldItemEdge {
  # A cursor for use in pagination.
  cursor: String!

  # The item at the end of the edge.
  node: InventoryHoldItem
}

# A hold or error object
union InventoryHoldOrErrorUnion = Errors | InventoryHold

# Represents untyped JSON
scalar JSON

type Mutation {
  holdInventory(input: HoldInventoryInput!): HoldInventoryPayload
  recordArtworkView(input: RecordArtworkViewInput!): RecordArtworkViewPayload
}

# Information about pagination in a connection.
type PageInfo {
  # When paginating forwards, the cursor to continue.
  endCursor: String

  # When paginating forwards, are there more items?
  hasNextPage: Boolean!

  # When paginating backwards, are there more items?
  hasPreviousPage: Boolean!

  # When paginating backwards, the cursor to continue.
  startCursor: String
}

type Query {
  # Autocomplete resolvers.
  _unused_gravity_matchPartners(matchType: String, page: Int = 1, size: Int = 5, term: String!): [DoNotUseThisPartner!]

  # Autocomplete resolvers.
  _unused_gravity_match_partners(match_type: String, page: Int = 1, size: Int = 5, term: String!): [DoNotUseThisPartner!] @deprecated(reason: \\"Use matchPartners\\")

  # Find partners by IDs
  _unused_gravity_partners(ids: [ID!]!): [DoNotUseThisPartner!]
}

# Autogenerated input type of RecordArtworkView
input RecordArtworkViewInput {
  artwork_id: String!

  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}

# Autogenerated return type of RecordArtworkView
type RecordArtworkViewPayload {
  # Id of viewed artwork
  artworkId: String!

  # Id of viewed artwork
  artwork_id: String! @deprecated(reason: \\"Use artworkId\\")

  # A unique identifier for the client performing the mutation.
  clientMutationId: String
}
"
`;
