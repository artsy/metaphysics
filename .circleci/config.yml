version: 2.1

orbs:
  hokusai: artsy/hokusai@volatile
  horizon: artsy/release@volatile
  node: circleci/node@6.3.0
  yarn: artsy/yarn@6.5.0

not_staging_or_release: &not_staging_or_release
  filters:
    branches:
      ignore:
        - staging
        - release

only_main: &only_main
  context: hokusai
  filters:
    branches:
      only: main

only_release: &only_release
  context: hokusai
  filters:
    branches:
      only: release

only_development: &only_development
  filters:
    branches:
      ignore:
        - staging
        - release
        - main

commands:
  setup_hokusai:
    steps:
      - run:
          name: Let hokusai modify /usr/local/bin
          command: sudo chmod -R 777 /usr/local/bin
      - hokusai/install-aws-iam-authenticator
      - run:
          name: Install hokusai
          command: |
            sudo apt update
            sudo apt install --assume-yes python3-pip
            sudo ln -s /usr/bin/python3 /usr/bin/python
            pip install awscli --upgrade
            pip install hokusai
      - hokusai/configure-hokusai

  yarn_install:
    steps:
      - yarn/load_dependencies
      - yarn/install
      - yarn/save_dependencies

jobs:
  test:
    executor:
      name: node/default
      tag: "18.15"
    parallelism: 6
    steps:
      - checkout
      - yarn_install
      - run:
          name: Run Jest
          command: |
            yarn jest --ci --forceExit --logHeapUsage --runInBand --reporters=default --reporters=jest-junit --shard=$(expr $CIRCLE_NODE_INDEX + 1)/$CIRCLE_NODE_TOTAL
  ensure-schema-update:
    executor:
      name: node/default
      tag: "18.15"
    steps:
      - checkout
      - setup_hokusai
      - yarn_install
      - run: scripts/ensure-schema-update.sh
  push-schema-changes:
    executor:
      name: node/default
      tag: "18.15"
    parallelism: 4
    steps:
      - checkout
      - setup_hokusai
      - yarn_install
      - run: |
          REPOS=("eigen" "energy" "prediction" "force" "forque" "pulse" "volt")
          TOTAL_NODES=${CIRCLE_NODE_TOTAL:-1}
          NODE_INDEX=${CIRCLE_NODE_INDEX:-0}

          # Calculate the subset of repos for this node
          CHUNK_SIZE=$(( (${#REPOS[@]} + TOTAL_NODES - 1) / TOTAL_NODES ))
          START_INDEX=$(( NODE_INDEX * CHUNK_SIZE ))
          END_INDEX=$(( START_INDEX + CHUNK_SIZE ))

          # Get the subset of repos for this node
          REPO_SUBSET=("${REPOS[@]:START_INDEX:CHUNK_SIZE}")

          # Convert REPO_SUBSET array to JSON for Node.js
          REPO_JSON=$(printf '%s\n' "${REPO_SUBSET[@]}" | jq -Rc '[inputs | {"repo": .}]')

          echo "Repos for this node: $REPO_SUBSET"
          echo "export REPOS_TO_UPDATE='$REPO_JSON'" >> $BASH_ENV
      - run:
          name: push schema changes
          command: node scripts/push-schema-changes.js

workflows:
  default:
    jobs:
      - test:
          <<: *not_staging_or_release

      - node/run:
          <<: *not_staging_or_release
          name: type-check
          pkg-manager: yarn
          yarn-run: type-check

      - ensure-schema-update:
          context: hokusai
          <<: *only_development

      # staging
      - hokusai/push:
          name: push-staging-image
          <<: *only_main

      - hokusai/deploy-staging:
          name: deploy-staging
          <<: *only_main
          project-name: metaphysics
          requires:
            - push-staging-image
            - type-check
            - test

      - push-schema-changes:
          # <<: *only_main
          context: hokusai
          # requires:
          # - deploy-staging

      - node/run:
          <<: *only_main
          name: deploy-cloudflare-workers-staging
          context: cloudflare
          pkg-manager: yarn
          yarn-run: deploy-cloudflare-workers:staging
          requires:
            - deploy-staging

      # release
      - horizon/block:
          <<: *only_release
          context: horizon
          project_id: 18

      - hokusai/deploy-production:
          <<: *only_release
          requires:
            - horizon/block

      - node/run:
          <<: *only_release
          name: deploy-cloudflare-workers
          context: cloudflare
          pkg-manager: yarn
          yarn-run: deploy-cloudflare-workers
          requires:
            - hokusai/deploy-production
