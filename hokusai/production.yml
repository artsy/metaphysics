---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: metaphysics-web
spec:
  strategy:
    rollingUpdate:
      maxSurge: 2
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: metaphysics
        layer: application
        component: web
      name: metaphysics-web
      namespace: default
    spec:
      containers:
      - name: metaphysics-web
        envFrom:
        - configMapRef:
            name: metaphysics-environment
        image: 585031190124.dkr.ecr.us-east-1.amazonaws.com/metaphysics:production
        imagePullPolicy: Always
        ports:
        - containerPort: 3000
        resources:
          requests:
            cpu: "0.5"
            memory: "512Mi"
          limits:
            cpu: "1"
            memory: "768Mi"
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: tier
                operator: In
                values:
                - foreground

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: metaphysics-web
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: extensions/v1beta1
    kind: Deployment
    name: metaphysics-web
  minReplicas: 10
  maxReplicas: 10
  targetCPUUtilizationPercentage: 100

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: metaphysics
    layer: application
    component: web
  name: metaphysics-web
  namespace: default
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:iam::585031190124:server-certificate/2018-01-17_artsy-net-wildcard"
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "http"
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-draining-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "300"
spec:
  ports:
  - port: 443
    protocol: TCP
    name: https
    targetPort: 3000
  - port: 80
    protocol: TCP
    name: http
    targetPort: 3000
  selector:
    app: metaphysics
    layer: application
    component: web
  sessionAffinity: None
  type: LoadBalancer
